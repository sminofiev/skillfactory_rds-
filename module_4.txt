
-- База данных содержит список аэропортов практически всех крупных городов России. В большинстве городов есть только один аэропорт. Исключение составляет: 

SELECT ap.city,
       count(ap.airport_code)
FROM dst_project.airports ap
GROUP BY ap.city
HAVING count(ap.airport_code) > 1


--Вопрос 1. Таблица рейсов содержит всю информацию о прошлых, текущих и запланированных рейсах. Сколько всего статусов для рейсов определено в таблице? 

SELECT count(st.status)
FROM
  (SELECT f.status status
   FROM dst_project.flights f
   GROUP BY f.status) st


--Вопрос 2. Какое количество самолетов находятся в воздухе на момент среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»).

SELECT count(f.flight_id)
FROM dst_project.flights f
WHERE f.status = 'Departed'

-- Вопрос 3. Места определяют схему салона каждой модели. Сколько мест имеет самолет модели  (Boeing 777-300)?

SELECT count(s.seat_no)
FROM dst_project.seats s,
     dst_project.aircrafts ac
WHERE s.aircraft_code = ac.aircraft_code
  AND ac.model = 'Boeing 777-300'

--Вопрос 4. Сколько состоявшихся (фактических) рейсов было совершено между 1 апреля 2017 года и 1 сентября 2017 года?

SELECT count(f.flight_id)
FROM dst_project.flights f
WHERE f.actual_arrival::date BETWEEN '2017-04-01' AND '2017-09-01'
  AND f.status = 'Arrived'


--Вопрос 1. Сколько всего рейсов было отменено по данным базы?

SELECT count(f.flight_id)
FROM dst_project.flights f
WHERE f.status = 'Cancelled'

--Вопрос 2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus находится в базе авиаперевозок?

SELECT count(DISTINCT ac.model)
FROM dst_project.aircrafts ac
WHERE ac.model like 'Boeing%'

SELECT count(DISTINCT ac.model)
FROM dst_project.aircrafts ac
WHERE ac.model like 'Sukhoi Superjet%'

SELECT count(DISTINCT ac.model)
FROM dst_project.aircrafts ac
WHERE ac.model like 'Airbus%'

--Вопрос 3. В какой части (частях) света находится больше аэропортов?

SELECT count(ap.airport_code)
FROM dst_project.airports ap
GROUP BY SUBSTRING(ap.timezone, 1, strpos(ap.timezone, '/')-1)
ORDER BY 1 DESC
LIMIT 1


--Вопрос 4. У какого рейса была самая большая задержка прибытия за все время сбора данных? Введите id рейса (flight_id).

SELECT extract(epoch
               FROM f.actual_arrival::TIMESTAMP - f.scheduled_arrival::TIMESTAMP),
       f.flight_id
FROM dst_project.flights f
WHERE f.status = 'Arrived'
ORDER BY 1 DESC
LIMIT 1


-- Вопрос 1. Когда был запланирован самый первый вылет, сохраненный в базе данных?

SELECT min(f.scheduled_departure)::date
FROM dst_project.flights f


--Вопрос 2. Сколько минут составляет запланированное время полета в самом длительном рейсе?

SELECT max(extract(epoch
                   FROM f.scheduled_arrival::TIMESTAMP - f.scheduled_departure::TIMESTAMP))/60
FROM dst_project.flights f


-- Вопрос 3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс?

SELECT DISTINCT f1.flight_no,
                f1.departure_airport,
                f1.arrival_airport
FROM dst_project.flights f1
WHERE extract(epoch
              FROM f1.scheduled_arrival::TIMESTAMP - f1.scheduled_departure::TIMESTAMP)/60 =
    (SELECT max(extract(epoch
                        FROM f.scheduled_arrival::TIMESTAMP - f.scheduled_departure::TIMESTAMP))/60
     FROM dst_project.flights f)



-- Вопрос 4. Сколько составляет средняя дальность полета среди всех самолетов в минутах? Секунды округляются в меньшую сторону (отбрасываются до минут).

SELECT round(avg(extract(epoch
                         FROM f.scheduled_arrival::TIMESTAMP - f.scheduled_departure::TIMESTAMP)/60))
FROM dst_project.flights f
ORDER BY 1 DESC


--Вопрос 1. Мест какого класса у SU9 больше всего?


SELECT s.fare_conditions,
       count(s.seat_no)
FROM dst_project.aircrafts ac
JOIN dst_project.seats s ON ac.aircraft_code = s.aircraft_code
WHERE ac.aircraft_code = 'SU9'
GROUP BY s.fare_conditions
ORDER BY 2 DESC
LIMIT 1


--Вопрос 2. Какую самую минимальную стоимость составило бронирование за всю историю?

SELECT min(b.total_amount)
FROM dst_project.bookings b


--Вопрос 3. Какой номер места был у пассажира с id = 4313 788533?

SELECT bp.seat_no
FROM dst_project.tickets t
JOIN dst_project.ticket_flights tf ON tf.ticket_no = t.ticket_no
JOIN dst_project.boarding_passes bp ON bp.ticket_no = tf.ticket_no
WHERE t.passenger_id ='4313 788533'


--Вопрос 1. Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год?

SELECT count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports ap ON ap.airport_code = f.arrival_airport
WHERE ap.city = 'Anapa'
  AND f.status = 'Arrived'
  AND date_part('year', f.scheduled_arrival) = 2017


--Вопрос 2. Сколько рейсов из Анапы вылетело зимой 2017 года?

SELECT count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports ap ON ap.airport_code = f.departure_airport
WHERE ap.city = 'Anapa'
  AND date_part('month', f.actual_arrival) in (1,
                                               2,
                                               12)
  AND date_part('year', f.actual_arrival) = 2017


--Вопрос 3. Посчитайте количество отмененных рейсов из Анапы за все время.

SELECT count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports ap ON ap.airport_code = f.departure_airport
WHERE ap.city = 'Anapa'
  AND f.status = 'Cancelled'


--Вопрос 4. Сколько рейсов из Анапы не летают в Москву?

SELECT count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports ap ON ap.airport_code = f.arrival_airport
WHERE ap.city = 'Anapa'
  AND f.departure_airport not in
    (SELECT ap1.airport_code
     FROM dst_project.airports ap1
     WHERE ap1.city = 'Moscow')


--Вопрос 5. Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест?

SELECT count(DISTINCT s.seat_no),
       ac.model
FROM dst_project.flights f
JOIN dst_project.airports ap ON ap.airport_code = f.departure_airport
JOIN dst_project.aircrafts ac ON ac.aircraft_code = f.aircraft_code
JOIN dst_project.seats s ON s.aircraft_code = ac.aircraft_code
WHERE ap.city = 'Anapa'
GROUP BY ac.model
ORDER BY 1 DESC
LIMIT 1


-- Задание по расчету прибыльности
сразу нужно сделать комментарий. 
Если посмотреть на колличество бронирований билетов за три зимних месяца из Анапы, то оно ничтожно мало, по сравнению с бронированиями билетов в Анапу и обратно. 
Так, из Анапы кол-во бронирований билетов составляет 3174

select COUNT(*)
from (
         select row_number() OVER(PARTITION BY b.book_ref order by f.scheduled_departure) cnt,
                b.book_ref, f.scheduled_departure, f.flight_id, f.departure_airport
         from dst_project.bookings b,
              dst_project.tickets t,
              dst_project.ticket_flights tf,
              dst_project.flights f,
              dst_project.aircrafts a,
              dst_project.airports ap,
              dst_project.boarding_passes pas,
              dst_project.seats s
         where
            tf.flight_id = f.flight_id
           and f.aircraft_code = a.aircraft_code
           and (ap.airport_code = f.departure_airport)
           and s.aircraft_code = a.aircraft_code
           and s.seat_no = pas.seat_no
           and pas.flight_id = tf.flight_id
           and pas.ticket_no = tf.ticket_no
           and b.book_ref = t.book_ref
           and t.ticket_no = tf.ticket_no
           and f.flight_id = tf.flight_id
           and (f.departure_airport = 'AAQ' or f.arrival_airport = 'AAQ')
           and (date_trunc('month', f.actual_departure) in ('2017-01-01','2017-02-01', '2017-12-01'))
    ORDER BY B.book_ref, cnt
     ) l
where l.departure_airport = 'AAQ' and l.cnt = 1


а количество вылетов из Других городов в Анапу составляет 8821
select COUNT(*)
from (
         select row_number() OVER(PARTITION BY b.book_ref order by f.scheduled_departure) cnt,
                b.book_ref, f.scheduled_departure, f.flight_id, f.departure_airport
         from dst_project.bookings b,
              dst_project.tickets t,
              dst_project.ticket_flights tf,
              dst_project.flights f,
              dst_project.aircrafts a,
              dst_project.airports ap,
              dst_project.boarding_passes pas,
              dst_project.seats s
         where
            tf.flight_id = f.flight_id
           and f.aircraft_code = a.aircraft_code
           and (ap.airport_code = f.departure_airport)
           and s.aircraft_code = a.aircraft_code
           and s.seat_no = pas.seat_no
           and pas.flight_id = tf.flight_id
           and pas.ticket_no = tf.ticket_no
           and b.book_ref = t.book_ref
           and t.ticket_no = tf.ticket_no
           and f.flight_id = tf.flight_id
           and (f.departure_airport = 'AAQ' or f.arrival_airport = 'AAQ')
           and (date_trunc('month', f.actual_departure) in ('2017-01-01','2017-02-01', '2017-12-01'))
    ORDER BY B.book_ref, cnt
     ) l
where l.departure_airport = 'AAQ' and l.cnt <> 1


-- Основной запрос

WITH durate AS
  (SELECT f2.flight_no AS flight_no,
          f2.departure_airport,
          f2.arrival_airport,
          f2.aircraft_code,
          f2.duration AS duration,
          array_agg(f2.days_of_week) AS days_of_week -- собираем инфо по дням недели. для анализа может понадобится

   FROM
     (SELECT f1.flight_no,
             f1.departure_airport,
             f1.arrival_airport,
             f1.aircraft_code,
             f1.duration,
             f1.days_of_week
      FROM
        (SELECT flights.flight_no,
                flights.departure_airport,
                flights.arrival_airport,
                flights.aircraft_code,
                (flights.scheduled_arrival - flights.scheduled_departure) AS duration,
                (to_char(flights.scheduled_departure, 'ID'::text))::integer AS days_of_week -- расчет дня недели

         FROM dst_project.flights flights) f1
      GROUP BY f1.flight_no,
               f1.departure_airport,
               f1.arrival_airport,
               f1.aircraft_code,
               f1.duration,
               f1.days_of_week
      ORDER BY f1.flight_no,
               f1.departure_airport,
               f1.arrival_airport,
               f1.aircraft_code,
               f1.duration,
               f1.days_of_week) f2
   GROUP BY f2.flight_no,
            f2.departure_airport,
            f2.arrival_airport,
            f2.aircraft_code,
            f2.duration)
SELECT f.*,
       (f.cost_gsm + f.cost_zp + f.cost_storonnim)::float AS expn, -- итоговые расходы
 (f.income - (f.cost_gsm + f.cost_zp + f.cost_storonnim)::float) AS rvn --прибыль
FROM
  (SELECT f.flight_id, -- перечислим ниже основной состав требуемых полей
 f.actual_departure,
 f.actual_arrival,
 tf.fare_conditions,
 tf.amount,
 adep.airport_code,
 adep.city,
 adep.timezone,
 aarr.airport_code,
 aarr.city,
 aarr.timezone,
 ac.model,
 ac.range,
 bp.seat_no,
 b.book_date,
 b.total_amount,
 d.duration AS duration,
 d.days_of_week AS days_of_week,
 seats.all_seats,
 seats.occup_seats,
 seats.percentage_of_total_sets,
 sum(tf.amount) OVER (PARTITION BY f.flight_id)::float income,
                     (date_part('hour', (d.duration))::DECIMAL + date_part('minutes', (d.duration)) / 60::DECIMAL)::float dhours,
                     (date_part('hour', (d.duration))::DECIMAL + date_part('minutes', (d.duration)) / 60::DECIMAL)::float * (2.6 * 47101 * 1.5)::float AS cost_gsm, -- стоимость ГСМ * на кол-во часов. исходим из стоимости 1т авиа 47101 руб за тонну и расходом 2.6 т на км
 (date_part('hour', (d.duration))::DECIMAL + date_part('minutes', (d.duration)) / 60::DECIMAL)::float * (100000)::float AS cost_zp, -- собственным расходы авиакомпании по статистике составляют примерно 100000 на летный час
 (334000)::float AS cost_storonnim -- расходы сторонним огранизациям, за вычетом ГСМ

   FROM durate d,

     (SELECT f.flight_id,
             f.flight_no,
             f.departure_airport,
             f.scheduled_departure,
             ast.all_seats,
             ost.occup_seats,
             round(ost.occup_seats::numeric / ast.all_seats::numeric * 100, 2) AS percentage_of_total_sets --считаем процент занятых мест в самолете

      FROM dst_project.flights f
      LEFT JOIN --джоиним таблицу с количеством свободных мест

        (SELECT f.flight_id,
                f.flight_no,
                count(f.flight_id) AS occup_seats --считаем количество свободных мест

         FROM dst_project.flights f --выбираем данные по перелетам

         LEFT JOIN dst_project.seats s --присоединяем таблицу с номерами мест
 ON f.aircraft_code = s.aircraft_code --по коду самолета

         LEFT JOIN dst_project.boarding_passes bp --присоединяем таблицу с информацией по бронированию
 ON s.seat_no = bp.seat_no --по номеру места

         AND f.flight_id = bp.flight_id --и по номеру рейса

         WHERE bp.seat_no IS NOT NULL --оставляем только занятые места

         GROUP BY f.flight_id) AS ost --в данном подзапросе формируем таблицу с количеством занятых мест в самолете
 ON f.flight_id = ost.flight_id --соединяем по номеру перелета

      LEFT JOIN --джоиним таблицу с общим количеством мест в самолете

        (SELECT a.aircraft_code,
                count(s.seat_no) AS all_seats --считаем количество мест в самолете

         FROM dst_project.aircrafts a --выбираем данные по самолетам

         LEFT JOIN dst_project.seats s --джоиним данные по местам
 ON a.aircraft_code = s.aircraft_code --по коду самолета

         GROUP BY a.aircraft_code) AS ast --в данном подзапросе формируем таблицу с количеством мест в каждом из самолетов
 ON f.aircraft_code = ast.aircraft_code --джоиним таблицу с местами к нашей исходной таблице

      GROUP BY f.flight_id,
               ast.all_seats,
               ost.occup_seats) AS seats,
        dst_project.flights f -- джойним все необходимые таблицы для выборки необходимой инфо

   JOIN dst_project.airports adep ON adep.airport_code = f.departure_airport
   JOIN dst_project.airports aarr ON aarr.airport_code = f.arrival_airport
   JOIN dst_project.aircrafts ac ON ac.aircraft_code = f.aircraft_code
   JOIN dst_project.ticket_flights tf ON tf.flight_id = f.flight_id
   JOIN dst_project.tickets t ON t.ticket_no = tf.ticket_no
   JOIN dst_project.bookings b ON b.book_ref = t.book_ref
   JOIN dst_project.boarding_passes bp ON bp.flight_id = tf.flight_id
   AND bp.ticket_no = tf.ticket_no
   JOIN dst_project.seats s ON s.aircraft_code = ac.aircraft_code
   AND s.seat_no = bp.seat_no
   WHERE f.departure_airport = 'AAQ' -- только Анапа

     AND d.flight_no = f.flight_no
     AND (date_trunc('month', f.actual_departure) in ('2017-01-01',
                                                      '2017-02-01',
                                                      '2017-12-01'))-- взяли 3 месяца 2017

     AND seats.flight_id = f.flight_id
   ORDER BY b.book_ref) AS f
ORDER BY rvn